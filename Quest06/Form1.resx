<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        XwAAAABJRU5ErkJggg==
</value>
  </data>
</root>